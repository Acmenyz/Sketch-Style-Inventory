// init (control alt cmd t)

#import 'inventory.js'
#import 'sandbox.js'

var definedTextStyles = [];
var uniqueTextStyles = [];


function analyseTextStyles ()Â {
	var styles = [[[doc documentData] layerTextStyles] objects]

	for (var i = 0; i < styles.count(); i++) {
		var style = styles.objectAtIndex(i);
		var textStyle = style.style().textStyle().attributes();
		if (!com.getflourish.common.isIncluded(definedTextStyles, textStyle)) {
	    	definedTextStyles.push({
	    		"textStyle": textStyle,
	    		"name": style.name()
	    	});
	    }
	}
	// sort by font size
	definedTextStyles.sort(compareTextStyleFontSize);
}

function compareTextStyleFontSize(a, b) {
	if (a.textStyle.NSFont.fontDescriptor().objectForKey(NSFontSizeAttribute) < b.textStyle.NSFont.fontDescriptor().objectForKey(NSFontSizeAttribute))
		return -1;
	if (a.textStyle.NSFont.fontDescriptor().objectForKey(NSFontSizeAttribute) > b.textStyle.NSFont.fontDescriptor().objectForKey(NSFontSizeAttribute))
		return 1;
	return 0;
}

function createTextStyles (artboard) {
	var top = 0;
	var margin = 20;
	var maxWidth = 0;

	for (var i = 0; i < definedTextStyles.length; i++) {
		var definedTextStyle = definedTextStyles[i];
		var textLayer = artboard.addLayerOfType("text");
		textLayer.setStringValue(com.getflourish.config.textStylePlaceholder)
		textLayer.style().textStyle().setAttributes(definedTextStyle.textStyle);
		textLayer.setName(definedTextStyle.name)
		var theWidth = textLayer.frame().width();

		if (theWidth > maxWidth) maxWidth = theWidth;
		textLayer.frame().setX(margin);
		textLayer.frame().setY(top);

		top += textLayer.frame().height() + margin;
	}

	[textLayer select:true byExpandingSelection:false]
	// centerView(textLayer)

	// Resize artboard and background to match the newly created text layers
	artboard.frame().setWidth(maxWidth + margin);
	artboard.frame().setHeight(top + margin);

    com.getflourish.common.addCheckeredBackground(artboard);

	// Zoom the view to make the entire artboard visible
	com.getflourish.view.zoomTo(artboard)

}

function exportStyles(artboard) {
	var styleSheetString = com.getflourish.css.generateStyleSheet(artboard.children());

	var view = [doc currentView];
	view.refresh();

	// Document path
	var document_path = [[doc fileURL] path].split([doc displayName])[0];

	var path = document_path + "/typography.css"

	com.getflourish.common.save_file_from_string(path, styleSheetString);
}

analyseTextStyles();

// for large files, sketch crashes after adding the style sheet page (a second time)
var styleSheetPage = doc.currentPage();
var artboard = com.getflourish.common.getArtboardByPageAndName(styleSheetPage, "Typography");
com.getflourish.common.removeAllLayersFromArtboard(artboard)
createTextStyles(artboard);

exportStyles(artboard);