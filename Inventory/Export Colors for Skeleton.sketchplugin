#import 'inventory.js'
#import 'sandbox.js'
#import 'sketchSelect.js'

var data = {
	primary: {

	}
};
var colorName = null;
var colorSheet = com.getflourish.common.getArtboardByPageAndName(doc.currentPage(), com.getflourish.config.colorInventoryName);
var hexColor = null;

// Path and file access
var document_path = [[doc fileURL] path].split([doc displayName])[0];
var path = document_path + "colors.json";

// Authorize Sketch to save a file
new AppSandbox().authorize(path, function () {
})

function save_file_from_string (filename, the_string) {
var path = [@"" stringByAppendingString:filename],
	str = [@"" stringByAppendingString:the_string];
	str.dataUsingEncoding_(NSUTF8StringEncoding).writeToFile_atomically_(path, true)
}

$("MSLayerGroup", colorSheet).each(function () {

	// check if there are swatches (groups of color swatches)

	colorName = this.name();

	// check if the color swatch has a defined name
	if (this.name().indexOf("Unnamed") == -1) {

		// loop through all child layers to find the color
		var layers = this.layers().array();
		for (var i = 0; i < layers.count(); i++) {

			// get the current layer
			var currentLayer = layers[i];
			if (currentLayer.name().indexOf("Color Swatch") == 0) {
				hexColor = currentLayer.name().substr(13);

				// remember color and name
				// todo: format string for use in SCSS?
				colorName = colorName;
				data.primary[colorName] = hexColor;
			}
		}
	}
});

save_file_from_string(path, JSON.stringify(data, undefined, 2));